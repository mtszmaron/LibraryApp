AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'LibraryApplication

  Sample SAM Template for LibraryApplication

  '
Globals:
  Function:
    Timeout: 20
  Api:
    Auth:
      Authorizers:
        CognitoAuth:
          AuthorizationScopes:
          - email
          UserPoolArn:
            Fn::GetAtt:
            - AuthUserPool
            - Arn
Parameters:
  BookingQueueName:
    Type: String
    Description: Booking Queue
    Default: BookingQueue
  BookingDLQName:
    Type: String
    Description: Booking Queue Dead Letter
    Default: BookingDLQ
Resources:
  LibraryAppFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: LibraryAppFunction
      Handler: LibraryAppHandler::handleRequest
      Runtime: java8
      MemorySize: 512
      Environment:
        Variables:
          PARAM1: VALUE
          JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: LibraryAppDynamoDb
      Events:
        GetBook:
          Type: Api
          Properties:
            Path: /libraryApp
            Method: get
            Auth:
              Authorizer: CognitoAuth
        AddBook:
          Type: Api
          Properties:
            Path: /libraryApp
            Method: post
            Auth:
              Authorizer: CognitoAuth
        DeleteBook:
          Type: Api
          Properties:
            Path: /libraryApp
            Method: delete
            Auth:
              Authorizer: CognitoAuth
        UpdateBook:
          Type: Api
          Properties:
            Path: /libraryApp
            Method: put
            Auth:
              Authorizer: CognitoAuth
    Metadata:
      SamResourceId: LibraryAppFunction
  BookingQueueFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: BookingQueueFunction
      Handler: BookingQueueHandler
      Runtime: java8
      MemorySize: 512
      Role:
        Fn::GetAtt:
        - BookingQueueFunctionRole
        - Arn
      Environment:
        Variables:
          PARAM1: VALUE
          JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1
      Events:
        Batch:
          Type: SQS
          Properties:
            Queue:
              Fn::GetAtt:
              - LibraryBookingQueue
              - Arn
            FunctionResponseTypes:
            - ReportBatchItemFailures
    Metadata:
      SamResourceId: BookingQueueFunction
  LibraryAppDynamoDb:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: LibraryTable
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
      - AttributeName: type
        AttributeType: S
      - AttributeName: category
        AttributeType: S
      - AttributeName: bookId
        AttributeType: S
      - AttributeName: title
        AttributeType: S
      - AttributeName: rentedBy
        AttributeType: S
      - AttributeName: name
        AttributeType: S
      KeySchema:
      - AttributeName: id
        KeyType: HASH
      - AttributeName: type
        KeyType: RANGE
      GlobalSecondaryIndexes:
      - IndexName: categoryIndex
        KeySchema:
        - AttributeName: category
          KeyType: HASH
        Projection:
          ProjectionType: ALL
      - IndexName: bookIdIndex
        KeySchema:
        - AttributeName: bookId
          KeyType: HASH
        Projection:
          ProjectionType: ALL
      - IndexName: typeIndex
        KeySchema:
        - AttributeName: type
          KeyType: HASH
        Projection:
          ProjectionType: ALL
      - IndexName: titleIndex
        KeySchema:
        - AttributeName: title
          KeyType: HASH
        Projection:
          ProjectionType: ALL
      - IndexName: rentedByIndex
        KeySchema:
        - AttributeName: rentedBy
          KeyType: HASH
        Projection:
          ProjectionType: ALL
      - IndexName: nameIndex
        KeySchema:
        - AttributeName: name
          KeyType: HASH
        Projection:
          ProjectionType: ALL
  AuthUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: LibraryAuthPool
      AutoVerifiedAttributes:
      - email
      AccountRecoverySetting:
        RecoveryMechanisms:
        - Name: verified_email
          Priority: 1
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: true
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true
          TemporaryPasswordValidityDays: 7
      UsernameConfiguration:
        CaseSensitive: true
      AliasAttributes:
      - email
      - preferred_username
      EmailConfiguration:
        EmailSendingAccount: COGNITO_DEFAULT
      Schema:
      - AttributeDataType: String
        Mutable: true
        Name: email
        Required: true
      - AttributeDataType: String
        Mutable: true
        Name: preferred_username
        Required: false
  AuthUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId:
        Ref: AuthUserPool
      ClientName: my-website
      ExplicitAuthFlows:
      - ALLOW_USER_SRP_AUTH
      - ALLOW_REFRESH_TOKEN_AUTH
      GenerateSecret: true
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthFlows:
      - implicit
      AllowedOAuthScopes:
      - email
      - openid
      EnableTokenRevocation: true
      PreventUserExistenceErrors: ENABLED
      AccessTokenValidity: 12
      IdTokenValidity: 12
      RefreshTokenValidity: 30
      SupportedIdentityProviders:
      - COGNITO
      CallbackURLs:
      - https://example.com
  AuthUserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      UserPoolId:
        Ref: AuthUserPool
      Domain: library-app-project
  LibraryBookingQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName:
        Ref: BookingQueueName
      VisibilityTimeout: 60
      RedrivePolicy:
        maxReceiveCount: 3
        deadLetterTargetArn:
          Fn::GetAtt:
          - LibraryBookingDLQ
          - Arn
  LibraryBookingDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName:
        Ref: BookingDLQName
  LibraryBookingQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
      - Ref: LibraryBookingQueue
      PolicyDocument:
        Statement:
        - Sid: Send_Permission
          Action:
          - SQS:SendMessage
          - SQS:ReceiveMessage
          - SQS:DeleteMessage
          - SQS:GetQueueUrl
          - SQS:GetQueueAttributes
          - SQS:ChangeMessageVisibility
          Effect: Allow
          Principal:
            AWS: '*'
          Resource:
            Fn::GetAtt:
            - LibraryBookingQueue
            - Arn
  BookingQueueFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: allowLambdaLogs
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:*
            Resource: arn:aws:logs:*:*:*
Outputs:
  LibraryAppFunctionApi:
    Description: API Gateway endpoint Library App Function
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/libraryApp/
  LibraryAppFunction:
    Description: Library App Lambda Function ARN
    Value:
      Fn::GetAtt:
      - LibraryAppFunction
      - Arn
  LibraryAppFunctionIamRole:
    Description: Implicit IAN Role Library App function
    Value:
      Fn::GetAtt:
      - LibraryAppFunctionRole
      - Arn
  BookingQueueFunctionApi:
    Description: API Gateway endpoint Library App Function
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/bookingQueue/
  BookingQueueFunction:
    Description: Library App Lambda Function ARN
    Value:
      Fn::GetAtt:
      - BookingQueueFunction
      - Arn
  BookingQueueFunctionIamRole:
    Description: Implicit IAN Role Library App function
    Value:
      Fn::GetAtt:
      - BookingQueueFunction
      - Arn
